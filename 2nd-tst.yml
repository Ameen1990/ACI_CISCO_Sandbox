---
-  hosts: apic
   any_errors_fatal: true
   gather_facts: no

   vars:
     ansible_connection: local
     ansible_python_interpreter: /usr/bin/python3
     l3out_name: 'L3_Out_Device'
     epg_4: 'External_EPG'
     L3_domain: 'ISR3945'


   vars_prompt:
     - name: "apic_ip"
       prompt: "Enter APIC IP"
       default: '10.10.20.14'
       private: no

     - name: "user"
       prompt: "Enter your APIC Username"
       default: 'admin'
       unsafe: yes

     - name: "pass"
       prompt: "Enter your APIC Password"
       default: 'C1sco12345'
       private: yes
       unsafe: yes


   vars_files:
     - /root/ACI_Objects_Creator/files/source.yml


   tasks:
   
#  - name: print with_dict output
#     debug:
#       msg: "{{ item }}"
#     with_subelements: 
#       - "{{ tenants }}"
#       - "bridge_domains"
          
#   - name: print subnet maks output  
#     tags: dbg
#     debug:
#       msg: "{{ item.1.subnets.0.name }}"
#     with_subelements: 
#       - "{{ tenants }}"
#       - "bridge_domains"


#   - name: debugging
#     tags: dbg
#     debug:
#       msg: "{{ item.0.name }}"
#       msg: "{{ item.1.name }}"
#       msg: "{{ item.1.subnets.0.name }}"
#       msg: "{{ item.1.name }}"
#       msg: "{{ item.1.name }}"
#     with_subelements: 
#       - "{{ tenants }}"
#       - "bridge_domains"




#   - name: Create EPG_Web_Server
#     tags: dbg
#     debug:
       #msg: "{{ item.0.name }}"
       #msg: "{{ item.1.application_profiles.0.epg }}"
       #msg: "{{ item.1.epgs.0.name }}"
#       msg: "{{ item.1.epgs.1.name }}"
#    with_subelements: 
#      - "{{ tenants }}"
#       - "application_profiles"
  

   - name: Create a tenant
     #tags: always
     aci_tenant:
       tenant: "{{ item.name }}"
       description: "{{ item.description }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     with_items:
       - "{{ tenants }}"


   - name: Create ap
     tags: ap
     aci_ap:
       tenant: "{{ item.0.name  }}"
       name: "{{ item.1.name }}"
       description: "{{ item.1.description }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     with_subelements: 
       - "{{ tenants }}"
       - "application_profiles"

   - name: create VRF
     tags: vrf
     aci_vrf:
       vrf: "{{ item.1.name }}"
       tenant: "{{ item.0.name }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     with_subelements: 
       - "{{ tenants }}"
       - "vrfs"

   - name: Add BD to ACI
     aci_bd:
       tenant: "{{ item.0.name }}"
       bd: "{{ item.1.name }}"
       vrf: "{{ item.1.vrf }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     
     with_subelements: 
       - "{{ tenants }}"
       - "bridge_domains"



   - name: create a subnet for Bridge-Domain_webserver
     tags: subs
     aci_bd_subnet:
       tenant: "{{ item.0.name }}"
       name: "{{ item.1.subnets.0.name }}"
       bd: "{{ item.1.name }}"
       gateway_ip: "{{ item.1.subnets.0.name }}"
       subnet_mask: "{{ item.1.subnets.0.mask }}"
       scope: "{{ item.1.subnets.0.scope }}"   
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false    
     with_subelements: 
       - "{{ tenants }}"
       - "bridge_domains"


   - name: Create EPG_Web_Server
     tags: epg
     aci_epg:
       tenant: "{{ item.0.name }}"
       ap: "{{ item.1.name }}"
       epg: "{{ item.1.epgs.0.name }}"
       bd: "{{ item.1.epgs.0.bd }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     with_subelements: 
       - "{{ tenants }}"
       - "application_profiles"



   - name: Create EPG_App_Server
     tags: epg
     aci_epg:
       tenant: "{{ item.0.name }}"
       ap: "{{ item.1.name }}"
       epg: "{{ item.1.epgs.1.name }}"
       bd: "{{ item.1.epgs.1.bd }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     with_subelements: 
       - "{{ tenants }}"
       - "application_profiles"


   - name: Create EPG_Data_Base
     tags: epg
     aci_epg:
       tenant: "{{ item.0.name }}"
       ap: "{{ item.1.name }}"
       epg: "{{ item.1.epgs.2.name }}"
       bd: "{{ item.1.epgs.2.bd }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     with_subelements: 
       - "{{ tenants }}"
       - "application_profiles"


   - name: Create our Three Contracts 
     tags: cont
     aci_contract:
       tenant: "{{ item.0.name }}"     
       contract: "{{ item.1.name }}"
       scope: "{{ item.1.scope }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     with_subelements: 
       - "{{ tenants }}"
       - "contracts"



   - name: Add a new contract subject
     tags: subj
     aci_contract_subject:
       tenant: "{{ item.0.name }}"
       contract: "{{ item.1.name }}"
       subject: "{{ item.1.subject.0.name }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     with_subelements: 
       - "{{ tenants }}"
       - "contracts"




   - name: Configure EPG_Web_Server as provider in contract C_internet
     tags: cont
     aci_epg_to_contract:
       tenant: "{{ item.0.name  }}"
       ap: "{{ item.1.name }}"
       epg: "{{ item.1.epgs.0.name }}"
       contract:  "{{ item.1.epgs.0.contracts.0.name }}"
       contract_type: "{{ item.1.epgs.0.contracts.0.type }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     with_subelements: 
       - "{{ tenants }}"
       - "application_profiles"


   - name: Configure EPG_Web_Server as Consumer in contract C_appserver
     tags: cont
     aci_epg_to_contract:
       tenant: "{{ item.0.name  }}"
       ap: "{{ item.1.name }}"
       epg: "{{ item.1.epgs.0.name }}"
       contract:  "{{ item.1.epgs.0.contracts.1.name }}"
       contract_type: "{{ item.1.epgs.0.contracts.1.type }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     with_subelements: 
       - "{{ tenants }}"
       - "application_profiles"



   - name:  Configure EPG_appserver as provider in contract C_appserver
     tags: cont
     aci_epg_to_contract:
       tenant: "{{ item.0.name  }}"
       ap: "{{ item.1.name }}"
       epg: "{{ item.1.epgs.1.name }}"
       contract:  "{{ item.1.epgs.1.contracts.0.name }}"
       contract_type: "{{ item.1.epgs.1.contracts.0.type }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     with_subelements: 
       - "{{ tenants }}"
       - "application_profiles"




   - name:  Configure EPG_appserver as consumer in contract C_database
     tags: cont
     aci_epg_to_contract:
       tenant: "{{ item.0.name  }}"
       ap: "{{ item.1.name }}"
       epg: "{{ item.1.epgs.1.name }}"
       contract:  "{{ item.1.epgs.1.contracts.1.name }}"
       contract_type: "{{ item.1.epgs.1.contracts.1.type }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     with_subelements: 
       - "{{ tenants }}"
       - "application_profiles"




   - name:  Configure EPG_database as provider in contract C_database
     tags: cont
     aci_epg_to_contract:
       tenant: "{{ item.0.name  }}"
       ap: "{{ item.1.name }}"
       epg: "{{ item.1.epgs.2.name }}"
       contract:  "{{ item.1.epgs.2.contracts.0.name }}"
       contract_type: "{{ item.1.epgs.2.contracts.0.type }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     with_subelements: 
       - "{{ tenants }}"
       - "application_profiles"



   - name: Create L3-Out
     tags: L3
     aci_l3out:
       tenant: "{{ item.0.name  }}"
       l3out:  "{{ l3out_name  }}"
       description: L3_Out for Production tenant
       domain: "{{ L3_domain }}"
       vrf: "{{ item.1.name }}"
       l3protocol: ospf
       route_control: export
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     with_subelements: 
       - "{{ tenants }}"
       - "vrfs"


   - name: Create External_EPG
     tags: L3,extepg
     aci_l3out_extepg:
       extepg: "{{ epg_4 }}"
       tenant: "{{ item.name  }}"
       l3out: "{{ l3out_name }}" 
       description: External EPG which to be associated with the L3-out
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     with_items:
       - "{{ tenants }}"


   - name: Configure external EPG_4 as consumer in contract C_internet
     tags: cont,L3,extepg
     cisco.aci.aci_l3out_extepg_to_contract:
       tenant: "{{ item.0.name  }}"
       extepg: "{{ epg_4 }}"
       l3out: "{{ l3out_name }}" 
       contract:  "{{ item.1.epgs.0.contracts.0.name }}"
       contract_type: consumer
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     with_subelements: 
       - "{{ tenants }}"
       - "application_profiles"


