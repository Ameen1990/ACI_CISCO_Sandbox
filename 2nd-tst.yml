---
-  hosts: apic
   any_errors_fatal: true
   gather_facts: no

   vars:
     ansible_connection: local
     ansible_python_interpreter: /usr/bin/python3
    
   vars_prompt:
     - name: "apic_ip"
       prompt: "Enter APIC IP"
       default: '10.10.20.14'
       private: no

     - name: "user"
       prompt: "Enter your APIC Username"
       default: 'admin'
       unsafe: yes

     - name: "pass"
       prompt: "Enter your APIC Password"
       default: 'C1sco12345'
       private: yes
       unsafe: yes


   vars_files:
     - /root/ACI_Objects_Creator/files/source.yml


   tasks:
   
#  - name: print with_dict output
#     debug:
#       msg: "{{ item }}"
#     with_subelements: 
#       - "{{ tenants }}"
#       - "bridge_domains"
          
#   - name: print subnet maks output
#     debug:
#       msg: "{{ item.1.subnets.0.name }}"
#     with_subelements: 
#       - "{{ tenants }}"
#       - "bridge_domains"


   - name: debugging
     tags: dbg
     debug:
       msg: "{{ item.0.name }}"
       msg: "{{ item.1.name }}"
       msg: "{{ item.1.subnets.0.name }}"
       #msg: "{{ item.1.name }}"
       #msg: "{{ item.1.name }}"
     with_subelements: 
       - "{{ tenants }}"
       - "bridge_domains"



   - name: Create a tenant
     #tags: always
     aci_tenant:
       tenant: "{{ item.name }}"
       description: "{{ item.description }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     with_items:
       - "{{ tenants }}"


   - name: Create ap
     tags: ap
     aci_ap:
       tenant: "{{ item.0.name  }}"
       name: "{{ item.1.name }}"
       description: "{{ item.1.description }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     with_subelements: 
       - "{{ tenants }}"
       - "application_profiles"

   - name: create VRF
     tags: vrf
     aci_vrf:
       vrf: "{{ item.1.name }}"
       tenant: "{{ item.0.name }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     with_subelements: 
       - "{{ tenants }}"
       - "vrfs"

   - name: Add BD to ACI
     aci_bd:
       tenant: "{{ item.0.name }}"
       bd: "{{ item.1.name }}"
       vrf: "{{ item.1.vrf }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     
     with_subelements: 
       - "{{ tenants }}"
       - "bridge_domains"



   - name: create a subnet for Bridge-Domain_webserver
     tags: subs
     aci_bd_subnet:
       tenant: "{{ item.0.name }}"
       name: "{{ item.1.subnets.0.name }}"
       bd: "{{ item.1.name }}"
       gateway_ip: "{{ item.1.subnets.0.name }}"
       subnet_mask: "{{ item.1.subnets.0.mask }}"
       scope: "{{ item.1.subnets.0.scope }}"   
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false    
     with_subelements: 
       - "{{ tenants }}"
       - "bridge_domains"


#   - name: Create EPG_Web_Server
#     tags: epg
#     aci_epg:
#       tenant: "{{ item.0.name }}"
#       ap: "{{ item.0.application_profiles.name }}"
#       epg: "{{ item.1.epg.0.name }}"
#       #description: "Description of EPG_Web"
#       #bd: "{{ item.1.epg.bd }}"
#       host: "{{ inventory_hostname }}"
#       username: "{{ user }}"
#       password: "{{ pass }}"
#       validate_certs: false
#     with_subelements: 
#       - "{{ tenants }}"
#       - "bridge_domains"

       

   - name: Create EPG_Web_Server
     tags: epg
     debug:
       var1: "{{ item.0.name }}"
       #msg: "{{ item.1.application_profiles.0.epg }}"
       var2: "{{ item.1.epgs.0.name }}"
       var3: "{{ item.1.epgs.0.bd }}"
     with_subelements: 
       - "{{ tenants }}"
       - "application_profiles"
  
