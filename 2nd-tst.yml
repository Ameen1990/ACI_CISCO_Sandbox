---
-  hosts: apic
   any_errors_fatal: true
   gather_facts: no

   vars:
     ansible_connection: local
     ansible_python_interpreter: /usr/bin/python3
    
   vars_prompt:
     - name: "apic_ip"
       prompt: "Enter APIC IP"
       default: 'sandboxapicdc.cisco.com'
       private: no

     - name: "user"
       prompt: "Enter your APIC Username"
       default: 'admin'
       unsafe: yes

     - name: "pass"
       prompt: "Enter your APIC Password"
       default: '!v3G@!4@Y'
       private: yes
       unsafe: yes


   vars_files:
     - /root/ACI_Objects_Creator/files/source.yml


   tasks:
   
   - name: print with_dict output
     debug:
       msg: "{{ item }}"
     with_subelements: 
       - "{{ tenants }}"
       - "bridge_domains"
          
   - name: print subnet maks output
     debug:
       msg: "{{ item.1.subnets.0.name }}"
     with_subelements: 
       - "{{ tenants }}"
       - "bridge_domains"



#   - name: with_subelements -> loop
#    tags: bd
#     debug:
#       msg: "{{ item.1.subnets.0.mask }}"
#     loop: 
#       - "{{ tenants | subelements('bridge_domains') }}"
#       - "{{ tenants | subelements('bridge_domains.subnets') }}"


#   - name: Display bd list
#     tags: bd
#     debug:
#       var: item
#     loop: "{{ jsondata  | json_query('tenants[*].bridge_domains[]') | list }}"
      

#  - name: with_subelements -> loop
#     tags: bd
#     debug:
#       msg: "{{ item.1.subnets.0.mask }}"
#     loop: "{{ jsondata | subelements('bridge_domains[]') }}"



   - name: Create a tenant
     tags: always
     aci_tenant:
       tenant: "{{ item.name }}"
       description: "{{ item.description }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     with_items:
       - "{{ tenants }}"


   - name: Create ap
     tags: ap
     aci_ap:
       tenant: "{{ item.0.name  }}"
       name: "{{ item.1.name }}"
       description: "{{ item.1.description }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     with_subelements: 
       - "{{ tenants }}"
       - "application_profiles"

   - name: create VRF
     tags: vrf
     aci_vrf:
       vrf: "{{ item.1.name }}"
       tenant: "{{ item.0.name }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     with_subelements: 
       - "{{ tenants }}"
       - "vrfs"

   - name: Add BD to ACI
     aci_bd:
       tenant: "{{ item.0.name }}"
       bd: "{{ item.1.name }}"
       vrf: "{{ item.1.vrf }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
      # scope: "{{ item.1.scope }}"
     with_subelements: 
       - "{{ tenants }}"
       - "bridge_domains"

   - name: create a subnet for Bridge-Domain_webserver
     tags: subs
     aci_bd_subnet:
       name: "{{ item.2.name }}"
       tenant: "{{ item.0.name }}"
       bd: "{{ item.1.name }}"
       gateway_ip: "{{ item.2.name }}"
       subnet_mask: "{{ item.2.mask }}"
       scope: "{{ item.2.scope }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     with_subelements: 
       - "{{ tenants }}"
       - "bridge_domains"
       - "bridge_domains.subnets"
       - "skip_missing=True"
