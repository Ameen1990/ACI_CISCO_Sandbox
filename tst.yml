---
-  hosts: apic
   any_errors_fatal: true
   gather_facts: no

   vars:
     ansible_connection: local
     ansible_python_interpreter: /usr/bin/python3
    
   vars_prompt:
     - name: "apic_ip"
       prompt: "Enter APIC IP"
       default: 'sandboxapicdc.cisco.com'
       private: no

     - name: "user"
       prompt: "Enter your APIC Username"
       default: 'admin'
       unsafe: yes

     - name: "pass"
       prompt: "Enter your APIC Password"
       default: '!v3G@!4@Y'
       private: yes
       unsafe: yes


   tasks:
   - name: Display the JSON file content
     tags: always
     shell: cat /root/ACI_Objects_Creator/files/source.json
     register: result

   - name: save the Json data to a Variable as a Fact
     tags: always
     set_fact:
       jsondata: "{{ result.stdout | from_json }}"


   - name: set tenant name & desc
     tags: always
     set_fact:
       tn_name:  "{{ jsondata | json_query('tenants[*].name') }}"

       #tn_desc: "{{ jsondata | json_query('tenants[*].description') }}"

#     vars:
#       jmesquery: 'tenants[*].name'


   - name: Print Tenant name
     debug:
       var: tn_name
       
   - name: Print Tenant  desc
     debug:
       var: tn_desc
   


   - name: Display ap list
     tags: ap
     set_fact:
       ap_name: item
     loop: "{{ jsondata  | json_query('tenants[*].application_profiles[].name') }}"

   - name: Display ap name field
     tags: ap
     debug:
       var: ap_name
     

# es funktioniert
#   - name: Display ap list
#     tags: ap
#     debug:
#       var: item
#     loop: "{{ jsondata  | json_query('tenants[*].application_profiles[].name') }}"


#   - name: set tenants desription
#     set_fact:
#       tn_desc: "{{ jsondata | json_query(jmesquery) }}"
#     vars:
#       jmesquery: 'tenants[*].description'




   - name: set bridge domains_name
     set_fact:
       b_ds: "{{ jsondata  | json_query('tenants[*].bridge_domains[]') }}"


   - name: Create a tenant
     aci_tenant:
       tenant: "{{ item.name }}"
       description: "{{ item.description }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     loop: "{{ jsondata  | json_query('tenants[*]') }}"


   - name: Create ap
     tags: ap
     aci_ap:
       tenant: "{{ tn.name }}"
       name: "{{ ap.name }}"
       description: "{{ ap.description }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     loop:  "{{ jsondata  | json_query('tenants[*].application_profiles[]') }}"
     loop_control:
      loop_var: ap

     loop: "{{ jsondata  | json_query('tenants[*]') }}"
    loop_control:
      loop_var: tn
     



   - name: Display vrf list
     tags: vrf
     debug:
       var: item
     loop: "{{ jsondata  | json_query('tenants[*].vrfs[]') }}"

   - name: create VRF
     tags: vrf
     aci_vrf:
       vrf: "{{ item.name }}"
       tenant: "{{ tn_name }}"
       host: "{{ inventory_hostname }}"
       username: "{{ user }}"
       password: "{{ pass }}"
       validate_certs: false
     loop: "{{ jsondata  | json_query('tenants[*].vrfs[]') }}"


# Output
# ok: [{{ apic_ip }}] => (item={u'name': u'datacenter'}) => {
#    "ansible_loop_var": "item",
#    "item": {
#        "name": "datacenter"
#    }
#}

